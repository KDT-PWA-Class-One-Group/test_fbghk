
version: '3.8'

services:
  db:
    image: ghcr.io/kdt-pwa-class-one-group/healthcheck-db:latest
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-db
    environment:
      POSTGRES_DB: healthcheck
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/kdt-pwa-class-one-group/healthcheck-api:latest
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-api
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/healthcheck
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  client:
    image: ghcr.io/kdt-pwa-class-one-group/healthcheck-client:latest
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-client
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:8000
    ports:
      - "3000:3000"
    networks:
      - frontend
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    restart: always

  proxy:
    image: ghcr.io/kdt-pwa-class-one-group/healthcheck-proxy:latest
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-proxy
    ports:
      - "80:80"
    networks:
      - frontend
    volumes:
      - nginx_logs:/var/log/nginx
    depends_on:
      client:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: always

networks:
  frontend:
    name: healthcheck-frontend
  backend:
    name: healthcheck-backend

volumes:
  db_data:
    name: healthcheck-db-data
  nginx_logs:
    name: healthcheck-nginx-logs
